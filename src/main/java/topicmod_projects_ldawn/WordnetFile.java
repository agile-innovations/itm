// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: wordnet_file.proto

package topicmod_projects_ldawn;

public final class WordnetFile {
  private WordnetFile() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class WordNetFile extends
      com.google.protobuf.GeneratedMessage {
    // Use WordNetFile.newBuilder() to construct.
    private WordNetFile() {
      initFields();
    }
    private WordNetFile(boolean noInit) {}
    
    private static final WordNetFile defaultInstance;
    public static WordNetFile getDefaultInstance() {
      return defaultInstance;
    }
    
    public WordNetFile getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return topicmod_projects_ldawn.WordnetFile.internal_static_topicmod_projects_ldawn_WordNetFile_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return topicmod_projects_ldawn.WordnetFile.internal_static_topicmod_projects_ldawn_WordNetFile_fieldAccessorTable;
    }
    
    public static final class Synset extends
        com.google.protobuf.GeneratedMessage {
      // Use Synset.newBuilder() to construct.
      private Synset() {
        initFields();
      }
      private Synset(boolean noInit) {}
      
      private static final Synset defaultInstance;
      public static Synset getDefaultInstance() {
        return defaultInstance;
      }
      
      public Synset getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return topicmod_projects_ldawn.WordnetFile.internal_static_topicmod_projects_ldawn_WordNetFile_Synset_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return topicmod_projects_ldawn.WordnetFile.internal_static_topicmod_projects_ldawn_WordNetFile_Synset_fieldAccessorTable;
      }
      
      public static final class Word extends
          com.google.protobuf.GeneratedMessage {
        // Use Word.newBuilder() to construct.
        private Word() {
          initFields();
        }
        private Word(boolean noInit) {}
        
        private static final Word defaultInstance;
        public static Word getDefaultInstance() {
          return defaultInstance;
        }
        
        public Word getDefaultInstanceForType() {
          return defaultInstance;
        }
        
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return topicmod_projects_ldawn.WordnetFile.internal_static_topicmod_projects_ldawn_WordNetFile_Synset_Word_descriptor;
        }
        
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return topicmod_projects_ldawn.WordnetFile.internal_static_topicmod_projects_ldawn_WordNetFile_Synset_Word_fieldAccessorTable;
        }
        
        // required uint32 term_id = 1;
        public static final int TERM_ID_FIELD_NUMBER = 1;
        private boolean hasTermId;
        private int termId_ = 0;
        public boolean hasTermId() { return hasTermId; }
        public int getTermId() { return termId_; }
        
        // optional uint32 lang_id = 2 [default = 0];
        public static final int LANG_ID_FIELD_NUMBER = 2;
        private boolean hasLangId;
        private int langId_ = 0;
        public boolean hasLangId() { return hasLangId; }
        public int getLangId() { return langId_; }
        
        // required string term_str = 3;
        public static final int TERM_STR_FIELD_NUMBER = 3;
        private boolean hasTermStr;
        private java.lang.String termStr_ = "";
        public boolean hasTermStr() { return hasTermStr; }
        public java.lang.String getTermStr() { return termStr_; }
        
        // optional string lang_str = 4;
        public static final int LANG_STR_FIELD_NUMBER = 4;
        private boolean hasLangStr;
        private java.lang.String langStr_ = "";
        public boolean hasLangStr() { return hasLangStr; }
        public java.lang.String getLangStr() { return langStr_; }
        
        // optional double x_location = 5;
        public static final int X_LOCATION_FIELD_NUMBER = 5;
        private boolean hasXLocation;
        private double xLocation_ = 0D;
        public boolean hasXLocation() { return hasXLocation; }
        public double getXLocation() { return xLocation_; }
        
        // optional double y_location = 6;
        public static final int Y_LOCATION_FIELD_NUMBER = 6;
        private boolean hasYLocation;
        private double yLocation_ = 0D;
        public boolean hasYLocation() { return hasYLocation; }
        public double getYLocation() { return yLocation_; }
        
        // optional int32 depth = 7;
        public static final int DEPTH_FIELD_NUMBER = 7;
        private boolean hasDepth;
        private int depth_ = 0;
        public boolean hasDepth() { return hasDepth; }
        public int getDepth() { return depth_; }
        
        // optional double count = 8;
        public static final int COUNT_FIELD_NUMBER = 8;
        private boolean hasCount;
        private double count_ = 0D;
        public boolean hasCount() { return hasCount; }
        public double getCount() { return count_; }
        
        private void initFields() {
        }
        public final boolean isInitialized() {
          if (!hasTermId) return false;
          if (!hasTermStr) return false;
          return true;
        }
        
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (hasTermId()) {
            output.writeUInt32(1, getTermId());
          }
          if (hasLangId()) {
            output.writeUInt32(2, getLangId());
          }
          if (hasTermStr()) {
            output.writeString(3, getTermStr());
          }
          if (hasLangStr()) {
            output.writeString(4, getLangStr());
          }
          if (hasXLocation()) {
            output.writeDouble(5, getXLocation());
          }
          if (hasYLocation()) {
            output.writeDouble(6, getYLocation());
          }
          if (hasDepth()) {
            output.writeInt32(7, getDepth());
          }
          if (hasCount()) {
            output.writeDouble(8, getCount());
          }
          getUnknownFields().writeTo(output);
        }
        
        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
        
          size = 0;
          if (hasTermId()) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(1, getTermId());
          }
          if (hasLangId()) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(2, getLangId());
          }
          if (hasTermStr()) {
            size += com.google.protobuf.CodedOutputStream
              .computeStringSize(3, getTermStr());
          }
          if (hasLangStr()) {
            size += com.google.protobuf.CodedOutputStream
              .computeStringSize(4, getLangStr());
          }
          if (hasXLocation()) {
            size += com.google.protobuf.CodedOutputStream
              .computeDoubleSize(5, getXLocation());
          }
          if (hasYLocation()) {
            size += com.google.protobuf.CodedOutputStream
              .computeDoubleSize(6, getYLocation());
          }
          if (hasDepth()) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(7, getDepth());
          }
          if (hasCount()) {
            size += com.google.protobuf.CodedOutputStream
              .computeDoubleSize(8, getCount());
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }
        
        public static topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset.Word parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data).buildParsed();
        }
        public static topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset.Word parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data, extensionRegistry)
                   .buildParsed();
        }
        public static topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset.Word parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data).buildParsed();
        }
        public static topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset.Word parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data, extensionRegistry)
                   .buildParsed();
        }
        public static topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset.Word parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input).buildParsed();
        }
        public static topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset.Word parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input, extensionRegistry)
                   .buildParsed();
        }
        public static topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset.Word parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          Builder builder = newBuilder();
          if (builder.mergeDelimitedFrom(input)) {
            return builder.buildParsed();
          } else {
            return null;
          }
        }
        public static topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset.Word parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          Builder builder = newBuilder();
          if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
            return builder.buildParsed();
          } else {
            return null;
          }
        }
        public static topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset.Word parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input).buildParsed();
        }
        public static topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset.Word parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input, extensionRegistry)
                   .buildParsed();
        }
        
        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset.Word prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }
        
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder> {
          private topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset.Word result;
          
          // Construct using topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset.Word.newBuilder()
          private Builder() {}
          
          private static Builder create() {
            Builder builder = new Builder();
            builder.result = new topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset.Word();
            return builder;
          }
          
          protected topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset.Word internalGetResult() {
            return result;
          }
          
          public Builder clear() {
            if (result == null) {
              throw new IllegalStateException(
                "Cannot call clear() after build().");
            }
            result = new topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset.Word();
            return this;
          }
          
          public Builder clone() {
            return create().mergeFrom(result);
          }
          
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset.Word.getDescriptor();
          }
          
          public topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset.Word getDefaultInstanceForType() {
            return topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset.Word.getDefaultInstance();
          }
          
          public boolean isInitialized() {
            return result.isInitialized();
          }
          public topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset.Word build() {
            if (result != null && !isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return buildPartial();
          }
          
          private topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset.Word buildParsed()
              throws com.google.protobuf.InvalidProtocolBufferException {
            if (!isInitialized()) {
              throw newUninitializedMessageException(
                result).asInvalidProtocolBufferException();
            }
            return buildPartial();
          }
          
          public topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset.Word buildPartial() {
            if (result == null) {
              throw new IllegalStateException(
                "build() has already been called on this Builder.");
            }
            topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset.Word returnMe = result;
            result = null;
            return returnMe;
          }
          
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset.Word) {
              return mergeFrom((topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset.Word)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }
          
          public Builder mergeFrom(topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset.Word other) {
            if (other == topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset.Word.getDefaultInstance()) return this;
            if (other.hasTermId()) {
              setTermId(other.getTermId());
            }
            if (other.hasLangId()) {
              setLangId(other.getLangId());
            }
            if (other.hasTermStr()) {
              setTermStr(other.getTermStr());
            }
            if (other.hasLangStr()) {
              setLangStr(other.getLangStr());
            }
            if (other.hasXLocation()) {
              setXLocation(other.getXLocation());
            }
            if (other.hasYLocation()) {
              setYLocation(other.getYLocation());
            }
            if (other.hasDepth()) {
              setDepth(other.getDepth());
            }
            if (other.hasCount()) {
              setCount(other.getCount());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }
          
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder(
                this.getUnknownFields());
            while (true) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  this.setUnknownFields(unknownFields.build());
                  return this;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    this.setUnknownFields(unknownFields.build());
                    return this;
                  }
                  break;
                }
                case 8: {
                  setTermId(input.readUInt32());
                  break;
                }
                case 16: {
                  setLangId(input.readUInt32());
                  break;
                }
                case 26: {
                  setTermStr(input.readString());
                  break;
                }
                case 34: {
                  setLangStr(input.readString());
                  break;
                }
                case 41: {
                  setXLocation(input.readDouble());
                  break;
                }
                case 49: {
                  setYLocation(input.readDouble());
                  break;
                }
                case 56: {
                  setDepth(input.readInt32());
                  break;
                }
                case 65: {
                  setCount(input.readDouble());
                  break;
                }
              }
            }
          }
          
          
          // required uint32 term_id = 1;
          public boolean hasTermId() {
            return result.hasTermId();
          }
          public int getTermId() {
            return result.getTermId();
          }
          public Builder setTermId(int value) {
            result.hasTermId = true;
            result.termId_ = value;
            return this;
          }
          public Builder clearTermId() {
            result.hasTermId = false;
            result.termId_ = 0;
            return this;
          }
          
          // optional uint32 lang_id = 2 [default = 0];
          public boolean hasLangId() {
            return result.hasLangId();
          }
          public int getLangId() {
            return result.getLangId();
          }
          public Builder setLangId(int value) {
            result.hasLangId = true;
            result.langId_ = value;
            return this;
          }
          public Builder clearLangId() {
            result.hasLangId = false;
            result.langId_ = 0;
            return this;
          }
          
          // required string term_str = 3;
          public boolean hasTermStr() {
            return result.hasTermStr();
          }
          public java.lang.String getTermStr() {
            return result.getTermStr();
          }
          public Builder setTermStr(java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  result.hasTermStr = true;
            result.termStr_ = value;
            return this;
          }
          public Builder clearTermStr() {
            result.hasTermStr = false;
            result.termStr_ = getDefaultInstance().getTermStr();
            return this;
          }
          
          // optional string lang_str = 4;
          public boolean hasLangStr() {
            return result.hasLangStr();
          }
          public java.lang.String getLangStr() {
            return result.getLangStr();
          }
          public Builder setLangStr(java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  result.hasLangStr = true;
            result.langStr_ = value;
            return this;
          }
          public Builder clearLangStr() {
            result.hasLangStr = false;
            result.langStr_ = getDefaultInstance().getLangStr();
            return this;
          }
          
          // optional double x_location = 5;
          public boolean hasXLocation() {
            return result.hasXLocation();
          }
          public double getXLocation() {
            return result.getXLocation();
          }
          public Builder setXLocation(double value) {
            result.hasXLocation = true;
            result.xLocation_ = value;
            return this;
          }
          public Builder clearXLocation() {
            result.hasXLocation = false;
            result.xLocation_ = 0D;
            return this;
          }
          
          // optional double y_location = 6;
          public boolean hasYLocation() {
            return result.hasYLocation();
          }
          public double getYLocation() {
            return result.getYLocation();
          }
          public Builder setYLocation(double value) {
            result.hasYLocation = true;
            result.yLocation_ = value;
            return this;
          }
          public Builder clearYLocation() {
            result.hasYLocation = false;
            result.yLocation_ = 0D;
            return this;
          }
          
          // optional int32 depth = 7;
          public boolean hasDepth() {
            return result.hasDepth();
          }
          public int getDepth() {
            return result.getDepth();
          }
          public Builder setDepth(int value) {
            result.hasDepth = true;
            result.depth_ = value;
            return this;
          }
          public Builder clearDepth() {
            result.hasDepth = false;
            result.depth_ = 0;
            return this;
          }
          
          // optional double count = 8;
          public boolean hasCount() {
            return result.hasCount();
          }
          public double getCount() {
            return result.getCount();
          }
          public Builder setCount(double value) {
            result.hasCount = true;
            result.count_ = value;
            return this;
          }
          public Builder clearCount() {
            result.hasCount = false;
            result.count_ = 0D;
            return this;
          }
          
          // @@protoc_insertion_point(builder_scope:topicmod_projects_ldawn.WordNetFile.Synset.Word)
        }
        
        static {
          defaultInstance = new Word(true);
          topicmod_projects_ldawn.WordnetFile.internalForceInit();
          defaultInstance.initFields();
        }
        
        // @@protoc_insertion_point(class_scope:topicmod_projects_ldawn.WordNetFile.Synset.Word)
      }
      
      // required int32 offset = 1;
      public static final int OFFSET_FIELD_NUMBER = 1;
      private boolean hasOffset;
      private int offset_ = 0;
      public boolean hasOffset() { return hasOffset; }
      public int getOffset() { return offset_; }
      
      // optional string key = 2;
      public static final int KEY_FIELD_NUMBER = 2;
      private boolean hasKey;
      private java.lang.String key_ = "";
      public boolean hasKey() { return hasKey; }
      public java.lang.String getKey() { return key_; }
      
      // repeated uint32 children_offsets = 3;
      public static final int CHILDREN_OFFSETS_FIELD_NUMBER = 3;
      private java.util.List<java.lang.Integer> childrenOffsets_ =
        java.util.Collections.emptyList();
      public java.util.List<java.lang.Integer> getChildrenOffsetsList() {
        return childrenOffsets_;
      }
      public int getChildrenOffsetsCount() { return childrenOffsets_.size(); }
      public int getChildrenOffsets(int index) {
        return childrenOffsets_.get(index);
      }
      
      // optional double raw_count = 4;
      public static final int RAW_COUNT_FIELD_NUMBER = 4;
      private boolean hasRawCount;
      private double rawCount_ = 0D;
      public boolean hasRawCount() { return hasRawCount; }
      public double getRawCount() { return rawCount_; }
      
      // optional double hyponym_count = 5;
      public static final int HYPONYM_COUNT_FIELD_NUMBER = 5;
      private boolean hasHyponymCount;
      private double hyponymCount_ = 0D;
      public boolean hasHyponymCount() { return hasHyponymCount; }
      public double getHyponymCount() { return hyponymCount_; }
      
      // repeated .topicmod_projects_ldawn.WordNetFile.Synset.Word words = 6;
      public static final int WORDS_FIELD_NUMBER = 6;
      private java.util.List<topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset.Word> words_ =
        java.util.Collections.emptyList();
      public java.util.List<topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset.Word> getWordsList() {
        return words_;
      }
      public int getWordsCount() { return words_.size(); }
      public topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset.Word getWords(int index) {
        return words_.get(index);
      }
      
      // optional string hyperparameter = 7;
      public static final int HYPERPARAMETER_FIELD_NUMBER = 7;
      private boolean hasHyperparameter;
      private java.lang.String hyperparameter_ = "";
      public boolean hasHyperparameter() { return hasHyperparameter; }
      public java.lang.String getHyperparameter() { return hyperparameter_; }
      
      private void initFields() {
      }
      public final boolean isInitialized() {
        if (!hasOffset) return false;
        for (topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset.Word element : getWordsList()) {
          if (!element.isInitialized()) return false;
        }
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasOffset()) {
          output.writeInt32(1, getOffset());
        }
        if (hasKey()) {
          output.writeString(2, getKey());
        }
        for (int element : getChildrenOffsetsList()) {
          output.writeUInt32(3, element);
        }
        if (hasRawCount()) {
          output.writeDouble(4, getRawCount());
        }
        if (hasHyponymCount()) {
          output.writeDouble(5, getHyponymCount());
        }
        for (topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset.Word element : getWordsList()) {
          output.writeMessage(6, element);
        }
        if (hasHyperparameter()) {
          output.writeString(7, getHyperparameter());
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasOffset()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, getOffset());
        }
        if (hasKey()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(2, getKey());
        }
        {
          int dataSize = 0;
          for (int element : getChildrenOffsetsList()) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(element);
          }
          size += dataSize;
          size += 1 * getChildrenOffsetsList().size();
        }
        if (hasRawCount()) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(4, getRawCount());
        }
        if (hasHyponymCount()) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(5, getHyponymCount());
        }
        for (topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset.Word element : getWordsList()) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, element);
        }
        if (hasHyperparameter()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(7, getHyperparameter());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      public static topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset result;
        
        // Construct using topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset();
          return builder;
        }
        
        protected topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset.getDescriptor();
        }
        
        public topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset getDefaultInstanceForType() {
          return topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          if (result.childrenOffsets_ != java.util.Collections.EMPTY_LIST) {
            result.childrenOffsets_ =
              java.util.Collections.unmodifiableList(result.childrenOffsets_);
          }
          if (result.words_ != java.util.Collections.EMPTY_LIST) {
            result.words_ =
              java.util.Collections.unmodifiableList(result.words_);
          }
          topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset) {
            return mergeFrom((topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset other) {
          if (other == topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset.getDefaultInstance()) return this;
          if (other.hasOffset()) {
            setOffset(other.getOffset());
          }
          if (other.hasKey()) {
            setKey(other.getKey());
          }
          if (!other.childrenOffsets_.isEmpty()) {
            if (result.childrenOffsets_.isEmpty()) {
              result.childrenOffsets_ = new java.util.ArrayList<java.lang.Integer>();
            }
            result.childrenOffsets_.addAll(other.childrenOffsets_);
          }
          if (other.hasRawCount()) {
            setRawCount(other.getRawCount());
          }
          if (other.hasHyponymCount()) {
            setHyponymCount(other.getHyponymCount());
          }
          if (!other.words_.isEmpty()) {
            if (result.words_.isEmpty()) {
              result.words_ = new java.util.ArrayList<topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset.Word>();
            }
            result.words_.addAll(other.words_);
          }
          if (other.hasHyperparameter()) {
            setHyperparameter(other.getHyperparameter());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 8: {
                setOffset(input.readInt32());
                break;
              }
              case 18: {
                setKey(input.readString());
                break;
              }
              case 24: {
                addChildrenOffsets(input.readUInt32());
                break;
              }
              case 26: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                while (input.getBytesUntilLimit() > 0) {
                  addChildrenOffsets(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              }
              case 33: {
                setRawCount(input.readDouble());
                break;
              }
              case 41: {
                setHyponymCount(input.readDouble());
                break;
              }
              case 50: {
                topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset.Word.Builder subBuilder = topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset.Word.newBuilder();
                input.readMessage(subBuilder, extensionRegistry);
                addWords(subBuilder.buildPartial());
                break;
              }
              case 58: {
                setHyperparameter(input.readString());
                break;
              }
            }
          }
        }
        
        
        // required int32 offset = 1;
        public boolean hasOffset() {
          return result.hasOffset();
        }
        public int getOffset() {
          return result.getOffset();
        }
        public Builder setOffset(int value) {
          result.hasOffset = true;
          result.offset_ = value;
          return this;
        }
        public Builder clearOffset() {
          result.hasOffset = false;
          result.offset_ = 0;
          return this;
        }
        
        // optional string key = 2;
        public boolean hasKey() {
          return result.hasKey();
        }
        public java.lang.String getKey() {
          return result.getKey();
        }
        public Builder setKey(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasKey = true;
          result.key_ = value;
          return this;
        }
        public Builder clearKey() {
          result.hasKey = false;
          result.key_ = getDefaultInstance().getKey();
          return this;
        }
        
        // repeated uint32 children_offsets = 3;
        public java.util.List<java.lang.Integer> getChildrenOffsetsList() {
          return java.util.Collections.unmodifiableList(result.childrenOffsets_);
        }
        public int getChildrenOffsetsCount() {
          return result.getChildrenOffsetsCount();
        }
        public int getChildrenOffsets(int index) {
          return result.getChildrenOffsets(index);
        }
        public Builder setChildrenOffsets(int index, int value) {
          result.childrenOffsets_.set(index, value);
          return this;
        }
        public Builder addChildrenOffsets(int value) {
          if (result.childrenOffsets_.isEmpty()) {
            result.childrenOffsets_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.childrenOffsets_.add(value);
          return this;
        }
        public Builder addAllChildrenOffsets(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          if (result.childrenOffsets_.isEmpty()) {
            result.childrenOffsets_ = new java.util.ArrayList<java.lang.Integer>();
          }
          super.addAll(values, result.childrenOffsets_);
          return this;
        }
        public Builder clearChildrenOffsets() {
          result.childrenOffsets_ = java.util.Collections.emptyList();
          return this;
        }
        
        // optional double raw_count = 4;
        public boolean hasRawCount() {
          return result.hasRawCount();
        }
        public double getRawCount() {
          return result.getRawCount();
        }
        public Builder setRawCount(double value) {
          result.hasRawCount = true;
          result.rawCount_ = value;
          return this;
        }
        public Builder clearRawCount() {
          result.hasRawCount = false;
          result.rawCount_ = 0D;
          return this;
        }
        
        // optional double hyponym_count = 5;
        public boolean hasHyponymCount() {
          return result.hasHyponymCount();
        }
        public double getHyponymCount() {
          return result.getHyponymCount();
        }
        public Builder setHyponymCount(double value) {
          result.hasHyponymCount = true;
          result.hyponymCount_ = value;
          return this;
        }
        public Builder clearHyponymCount() {
          result.hasHyponymCount = false;
          result.hyponymCount_ = 0D;
          return this;
        }
        
        // repeated .topicmod_projects_ldawn.WordNetFile.Synset.Word words = 6;
        public java.util.List<topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset.Word> getWordsList() {
          return java.util.Collections.unmodifiableList(result.words_);
        }
        public int getWordsCount() {
          return result.getWordsCount();
        }
        public topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset.Word getWords(int index) {
          return result.getWords(index);
        }
        public Builder setWords(int index, topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset.Word value) {
          if (value == null) {
            throw new NullPointerException();
          }
          result.words_.set(index, value);
          return this;
        }
        public Builder setWords(int index, topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset.Word.Builder builderForValue) {
          result.words_.set(index, builderForValue.build());
          return this;
        }
        public Builder addWords(topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset.Word value) {
          if (value == null) {
            throw new NullPointerException();
          }
          if (result.words_.isEmpty()) {
            result.words_ = new java.util.ArrayList<topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset.Word>();
          }
          result.words_.add(value);
          return this;
        }
        public Builder addWords(topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset.Word.Builder builderForValue) {
          if (result.words_.isEmpty()) {
            result.words_ = new java.util.ArrayList<topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset.Word>();
          }
          result.words_.add(builderForValue.build());
          return this;
        }
        public Builder addAllWords(
            java.lang.Iterable<? extends topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset.Word> values) {
          if (result.words_.isEmpty()) {
            result.words_ = new java.util.ArrayList<topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset.Word>();
          }
          super.addAll(values, result.words_);
          return this;
        }
        public Builder clearWords() {
          result.words_ = java.util.Collections.emptyList();
          return this;
        }
        
        // optional string hyperparameter = 7;
        public boolean hasHyperparameter() {
          return result.hasHyperparameter();
        }
        public java.lang.String getHyperparameter() {
          return result.getHyperparameter();
        }
        public Builder setHyperparameter(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasHyperparameter = true;
          result.hyperparameter_ = value;
          return this;
        }
        public Builder clearHyperparameter() {
          result.hasHyperparameter = false;
          result.hyperparameter_ = getDefaultInstance().getHyperparameter();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:topicmod_projects_ldawn.WordNetFile.Synset)
      }
      
      static {
        defaultInstance = new Synset(true);
        topicmod_projects_ldawn.WordnetFile.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:topicmod_projects_ldawn.WordNetFile.Synset)
    }
    
    // repeated .topicmod_projects_ldawn.WordNetFile.Synset synsets = 1;
    public static final int SYNSETS_FIELD_NUMBER = 1;
    private java.util.List<topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset> synsets_ =
      java.util.Collections.emptyList();
    public java.util.List<topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset> getSynsetsList() {
      return synsets_;
    }
    public int getSynsetsCount() { return synsets_.size(); }
    public topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset getSynsets(int index) {
      return synsets_.get(index);
    }
    
    // required int32 root = 2;
    public static final int ROOT_FIELD_NUMBER = 2;
    private boolean hasRoot;
    private int root_ = 0;
    public boolean hasRoot() { return hasRoot; }
    public int getRoot() { return root_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasRoot) return false;
      for (topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset element : getSynsetsList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset element : getSynsetsList()) {
        output.writeMessage(1, element);
      }
      if (hasRoot()) {
        output.writeInt32(2, getRoot());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset element : getSynsetsList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      if (hasRoot()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getRoot());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static topicmod_projects_ldawn.WordnetFile.WordNetFile parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static topicmod_projects_ldawn.WordnetFile.WordNetFile parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static topicmod_projects_ldawn.WordnetFile.WordNetFile parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static topicmod_projects_ldawn.WordnetFile.WordNetFile parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static topicmod_projects_ldawn.WordnetFile.WordNetFile parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static topicmod_projects_ldawn.WordnetFile.WordNetFile parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static topicmod_projects_ldawn.WordnetFile.WordNetFile parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static topicmod_projects_ldawn.WordnetFile.WordNetFile parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static topicmod_projects_ldawn.WordnetFile.WordNetFile parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static topicmod_projects_ldawn.WordnetFile.WordNetFile parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(topicmod_projects_ldawn.WordnetFile.WordNetFile prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private topicmod_projects_ldawn.WordnetFile.WordNetFile result;
      
      // Construct using topicmod_projects_ldawn.WordnetFile.WordNetFile.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new topicmod_projects_ldawn.WordnetFile.WordNetFile();
        return builder;
      }
      
      protected topicmod_projects_ldawn.WordnetFile.WordNetFile internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new topicmod_projects_ldawn.WordnetFile.WordNetFile();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return topicmod_projects_ldawn.WordnetFile.WordNetFile.getDescriptor();
      }
      
      public topicmod_projects_ldawn.WordnetFile.WordNetFile getDefaultInstanceForType() {
        return topicmod_projects_ldawn.WordnetFile.WordNetFile.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public topicmod_projects_ldawn.WordnetFile.WordNetFile build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private topicmod_projects_ldawn.WordnetFile.WordNetFile buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public topicmod_projects_ldawn.WordnetFile.WordNetFile buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.synsets_ != java.util.Collections.EMPTY_LIST) {
          result.synsets_ =
            java.util.Collections.unmodifiableList(result.synsets_);
        }
        topicmod_projects_ldawn.WordnetFile.WordNetFile returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof topicmod_projects_ldawn.WordnetFile.WordNetFile) {
          return mergeFrom((topicmod_projects_ldawn.WordnetFile.WordNetFile)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(topicmod_projects_ldawn.WordnetFile.WordNetFile other) {
        if (other == topicmod_projects_ldawn.WordnetFile.WordNetFile.getDefaultInstance()) return this;
        if (!other.synsets_.isEmpty()) {
          if (result.synsets_.isEmpty()) {
            result.synsets_ = new java.util.ArrayList<topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset>();
          }
          result.synsets_.addAll(other.synsets_);
        }
        if (other.hasRoot()) {
          setRoot(other.getRoot());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset.Builder subBuilder = topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addSynsets(subBuilder.buildPartial());
              break;
            }
            case 16: {
              setRoot(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // repeated .topicmod_projects_ldawn.WordNetFile.Synset synsets = 1;
      public java.util.List<topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset> getSynsetsList() {
        return java.util.Collections.unmodifiableList(result.synsets_);
      }
      public int getSynsetsCount() {
        return result.getSynsetsCount();
      }
      public topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset getSynsets(int index) {
        return result.getSynsets(index);
      }
      public Builder setSynsets(int index, topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.synsets_.set(index, value);
        return this;
      }
      public Builder setSynsets(int index, topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset.Builder builderForValue) {
        result.synsets_.set(index, builderForValue.build());
        return this;
      }
      public Builder addSynsets(topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.synsets_.isEmpty()) {
          result.synsets_ = new java.util.ArrayList<topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset>();
        }
        result.synsets_.add(value);
        return this;
      }
      public Builder addSynsets(topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset.Builder builderForValue) {
        if (result.synsets_.isEmpty()) {
          result.synsets_ = new java.util.ArrayList<topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset>();
        }
        result.synsets_.add(builderForValue.build());
        return this;
      }
      public Builder addAllSynsets(
          java.lang.Iterable<? extends topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset> values) {
        if (result.synsets_.isEmpty()) {
          result.synsets_ = new java.util.ArrayList<topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset>();
        }
        super.addAll(values, result.synsets_);
        return this;
      }
      public Builder clearSynsets() {
        result.synsets_ = java.util.Collections.emptyList();
        return this;
      }
      
      // required int32 root = 2;
      public boolean hasRoot() {
        return result.hasRoot();
      }
      public int getRoot() {
        return result.getRoot();
      }
      public Builder setRoot(int value) {
        result.hasRoot = true;
        result.root_ = value;
        return this;
      }
      public Builder clearRoot() {
        result.hasRoot = false;
        result.root_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:topicmod_projects_ldawn.WordNetFile)
    }
    
    static {
      defaultInstance = new WordNetFile(true);
      topicmod_projects_ldawn.WordnetFile.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:topicmod_projects_ldawn.WordNetFile)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_topicmod_projects_ldawn_WordNetFile_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_topicmod_projects_ldawn_WordNetFile_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_topicmod_projects_ldawn_WordNetFile_Synset_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_topicmod_projects_ldawn_WordNetFile_Synset_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_topicmod_projects_ldawn_WordNetFile_Synset_Word_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_topicmod_projects_ldawn_WordNetFile_Synset_Word_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022wordnet_file.proto\022\027topicmod_projects_" +
      "ldawn\"\266\003\n\013WordNetFile\022<\n\007synsets\030\001 \003(\0132+" +
      ".topicmod_projects_ldawn.WordNetFile.Syn" +
      "set\022\014\n\004root\030\002 \002(\005\032\332\002\n\006Synset\022\016\n\006offset\030\001" +
      " \002(\005\022\013\n\003key\030\002 \001(\t\022\030\n\020children_offsets\030\003 " +
      "\003(\r\022\021\n\traw_count\030\004 \001(\001\022\025\n\rhyponym_count\030" +
      "\005 \001(\001\022?\n\005words\030\006 \003(\01320.topicmod_projects" +
      "_ldawn.WordNetFile.Synset.Word\022\026\n\016hyperp" +
      "arameter\030\007 \001(\t\032\225\001\n\004Word\022\017\n\007term_id\030\001 \002(\r" +
      "\022\022\n\007lang_id\030\002 \001(\r:\0010\022\020\n\010term_str\030\003 \002(\t\022\020",
      "\n\010lang_str\030\004 \001(\t\022\022\n\nx_location\030\005 \001(\001\022\022\n\n" +
      "y_location\030\006 \001(\001\022\r\n\005depth\030\007 \001(\005\022\r\n\005count" +
      "\030\010 \001(\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_topicmod_projects_ldawn_WordNetFile_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_topicmod_projects_ldawn_WordNetFile_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_topicmod_projects_ldawn_WordNetFile_descriptor,
              new java.lang.String[] { "Synsets", "Root", },
              topicmod_projects_ldawn.WordnetFile.WordNetFile.class,
              topicmod_projects_ldawn.WordnetFile.WordNetFile.Builder.class);
          internal_static_topicmod_projects_ldawn_WordNetFile_Synset_descriptor =
            internal_static_topicmod_projects_ldawn_WordNetFile_descriptor.getNestedTypes().get(0);
          internal_static_topicmod_projects_ldawn_WordNetFile_Synset_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_topicmod_projects_ldawn_WordNetFile_Synset_descriptor,
              new java.lang.String[] { "Offset", "Key", "ChildrenOffsets", "RawCount", "HyponymCount", "Words", "Hyperparameter", },
              topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset.class,
              topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset.Builder.class);
          internal_static_topicmod_projects_ldawn_WordNetFile_Synset_Word_descriptor =
            internal_static_topicmod_projects_ldawn_WordNetFile_Synset_descriptor.getNestedTypes().get(0);
          internal_static_topicmod_projects_ldawn_WordNetFile_Synset_Word_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_topicmod_projects_ldawn_WordNetFile_Synset_Word_descriptor,
              new java.lang.String[] { "TermId", "LangId", "TermStr", "LangStr", "XLocation", "YLocation", "Depth", "Count", },
              topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset.Word.class,
              topicmod_projects_ldawn.WordnetFile.WordNetFile.Synset.Word.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
